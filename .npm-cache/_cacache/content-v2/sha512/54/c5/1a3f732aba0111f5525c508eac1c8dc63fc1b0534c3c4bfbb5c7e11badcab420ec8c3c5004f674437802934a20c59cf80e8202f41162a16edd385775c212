{"_id":"cursor-talk-to-figma-socket","_rev":"5-32b4cd7f8dda96c27f5e3809fc8577f0","name":"cursor-talk-to-figma-socket","dist-tags":{"latest":"0.3.4"},"versions":{"0.0.1":{"name":"cursor-talk-to-figma-socket","version":"0.0.1","_id":"cursor-talk-to-figma-socket@0.0.1","maintainers":[{"name":"webrangeriit","email":"webrangeriit@gmail.com"}],"bin":{"cursor-talk-to-figma-socket":"src/socket.ts"},"dist":{"shasum":"701d96ccfcf78bd762feb49fa4b1aeec0ff7dd38","tarball":"https://registry.npmjs.org/cursor-talk-to-figma-socket/-/cursor-talk-to-figma-socket-0.0.1.tgz","fileCount":4,"integrity":"sha512-cCNojlXqYaQG8LUuRcSsSQ7+kNVRo3qtXsvkWabYU5pbkbEPNEvC23r5HC3GgSDOGSEOButLfRBvwSolMU2AMg==","signatures":[{"sig":"MEQCIF9T5IdWXwKrxN2KySfmo+4fg6isxMqkXfJqSh0J8IpTAiAnWOv/Vx3E0APLBA8H/hCdOeQPWCcYGBZWzyJbC3VE6Q==","keyid":"SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U"}],"unpackedSize":11927},"main":"src/socket.ts","type":"module","module":"src/socket.ts","gitHead":"51c08d4dd1270ed198a0ca43f1020d511e8f2fbc","scripts":{"dev":"bun run build:watch","build":"tsup","setup":"./scripts/setup.sh","start":"bun run src/socket.ts","socket":"bun run src/socket.ts","build:watch":"tsup --watch","pub:release":"bun run build && npm publish"},"_npmUser":{"name":"webrangeriit","email":"webrangeriit@gmail.com"},"_npmVersion":"10.8.2","description":"Cursor Talk to Figma Socket","directories":{},"_nodeVersion":"18.20.5","dependencies":{"ws":"latest","zod":"latest","uuid":"latest","@modelcontextprotocol/sdk":"latest"},"_hasShrinkwrap":false,"devDependencies":{"tsup":"^8.4.0","bun-types":"^1.2.5","@types/bun":"latest","typescript":"^5.0.0"},"_npmOperationalInternal":{"tmp":"tmp/cursor-talk-to-figma-socket_0.0.1_1742993613885_0.9775475840565169","host":"s3://npm-registry-packages-npm-production"}},"0.0.2":{"name":"cursor-talk-to-figma-socket","version":"0.0.2","_id":"cursor-talk-to-figma-socket@0.0.2","maintainers":[{"name":"webrangeriit","email":"webrangeriit@gmail.com"}],"bin":{"cursor-talk-to-figma-socket":"dist/socket.js"},"dist":{"shasum":"8df80349bc8a103db7baf98c9f079804a8ce5c14","tarball":"https://registry.npmjs.org/cursor-talk-to-figma-socket/-/cursor-talk-to-figma-socket-0.0.2.tgz","fileCount":9,"integrity":"sha512-WBcL9WYMK/SxzAlOrbRFlFmH9K6y6K2bxsk8uXF+KkTblyETdRW1wA0Y/PmC0Tsz2T9GF/3FA/FL36cW11XY0Q==","signatures":[{"sig":"MEYCIQCsO6Ts+umcT0HBSPGrGRQSc+iHJ6pDXblOOgvPvB8S3wIhAMylKwEP2/L+pgqYBkBgVT97poBJUbYUzDsU2LN66F7Q","keyid":"SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U"}],"unpackedSize":31967},"main":"dist/socket.js","type":"module","types":"./dist/socket.d.ts","module":"dist/socket.js","gitHead":"51c08d4dd1270ed198a0ca43f1020d511e8f2fbc","scripts":{"dev":"bun run build:watch","build":"tsup","setup":"./scripts/setup.sh","start":"bun run dist/socket.js","socket":"bun run dist/socket.js","build:watch":"tsup --watch","pub:release":"bun run build && npm publish"},"_npmUser":{"name":"webrangeriit","email":"webrangeriit@gmail.com"},"_npmVersion":"10.8.2","description":"Cursor Talk to Figma Socket","directories":{},"_nodeVersion":"18.20.5","dependencies":{"ws":"latest","zod":"latest","uuid":"latest","@modelcontextprotocol/sdk":"latest"},"_hasShrinkwrap":false,"devDependencies":{"tsup":"^8.4.0","bun-types":"^1.2.5","@types/bun":"latest","typescript":"^5.0.0"},"_npmOperationalInternal":{"tmp":"tmp/cursor-talk-to-figma-socket_0.0.2_1742993732792_0.27668103887333384","host":"s3://npm-registry-packages-npm-production"}},"0.0.3":{"name":"cursor-talk-to-figma-socket","version":"0.0.3","_id":"cursor-talk-to-figma-socket@0.0.3","maintainers":[{"name":"webrangeriit","email":"webrangeriit@gmail.com"}],"bin":{"cursor-talk-to-figma-socket":"dist/socket.js"},"dist":{"shasum":"0cd82cc4d367941394413bee8c4cbf9d5ded36f7","tarball":"https://registry.npmjs.org/cursor-talk-to-figma-socket/-/cursor-talk-to-figma-socket-0.0.3.tgz","fileCount":9,"integrity":"sha512-Z4wrnno6gUlK8pLk5wpOVqBqzpWHibkU6O8vBhNMY6ykl5+KZMo/IrOAGc95u5hHMX5nRSWNLR06zAV2iATwxQ==","signatures":[{"sig":"MEUCIA1M9E2K4ixWwyz77JrKy1rFzFzzK1WuSwA8/oEgw6AaAiEA9ni0cjzrKDjxWHHVzd3W/nkv5IIUXCUZBsNA22OPqY8=","keyid":"SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U"}],"unpackedSize":32071},"main":"dist/socket.js","type":"module","types":"./dist/socket.d.ts","module":"dist/socket.js","gitHead":"bc8be21c50a8df41de130cc700aa14b73c5f2456","scripts":{"dev":"bun run build:watch","build":"tsup","setup":"./scripts/setup.sh","start":"bun run dist/socket.js","socket":"bun run dist/socket.js","build:watch":"tsup --watch","pub:release":"bun run build && npm publish"},"_npmUser":{"name":"webrangeriit","email":"webrangeriit@gmail.com"},"_npmVersion":"10.8.2","description":"Cursor Talk to Figma Socket","directories":{},"_nodeVersion":"18.20.5","dependencies":{"ws":"latest","zod":"latest","uuid":"latest","@modelcontextprotocol/sdk":"latest"},"_hasShrinkwrap":false,"devDependencies":{"tsup":"^8.4.0","bun-types":"^1.2.5","@types/bun":"latest","typescript":"^5.0.0"},"_npmOperationalInternal":{"tmp":"tmp/cursor-talk-to-figma-socket_0.0.3_1742994413723_0.3667018386917029","host":"s3://npm-registry-packages-npm-production"}},"0.0.4":{"name":"cursor-talk-to-figma-socket","version":"0.0.4","_id":"cursor-talk-to-figma-socket@0.0.4","maintainers":[{"name":"webrangeriit","email":"webrangeriit@gmail.com"}],"bin":{"cursor-talk-to-figma-socket":"dist/socket.js"},"dist":{"shasum":"9763de77ed36c2468f37d70e3d9741240923803a","tarball":"https://registry.npmjs.org/cursor-talk-to-figma-socket/-/cursor-talk-to-figma-socket-0.0.4.tgz","fileCount":9,"integrity":"sha512-qe/GEujeoJpjFQHWOAGFiUK63E8ygyjxUxbEtI3EzDoKHKfrKVJAfQrEdY5fWf5uxdgjndskD/HADQnvN0cjpA==","signatures":[{"sig":"MEUCIBEghLQbJSqIJaMCw58yB5yI8B8CI/H/sLHjVoHjNXagAiEA/yJwjHMjcRIspAM/WrYEy2PU1xpdE/9RT3gGT75LzJg=","keyid":"SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U"}],"unpackedSize":32065},"main":"dist/socket.js","type":"module","types":"./dist/socket.d.ts","module":"dist/socket.js","gitHead":"bc8be21c50a8df41de130cc700aa14b73c5f2456","scripts":{"dev":"bun run build:watch","build":"tsup","setup":"./scripts/setup.sh","start":"bun run dist/socket.js","socket":"bun run dist/socket.js","build:watch":"tsup --watch","pub:release":"bun run build && npm publish"},"_npmUser":{"name":"webrangeriit","email":"webrangeriit@gmail.com"},"_npmVersion":"10.8.2","description":"Cursor Talk to Figma Socket","directories":{},"_nodeVersion":"18.20.5","dependencies":{"ws":"latest","zod":"latest","uuid":"latest","@modelcontextprotocol/sdk":"latest"},"_hasShrinkwrap":false,"devDependencies":{"tsup":"^8.4.0","bun-types":"^1.2.5","@types/bun":"latest","typescript":"^5.0.0"},"_npmOperationalInternal":{"tmp":"tmp/cursor-talk-to-figma-socket_0.0.4_1742994520025_0.7138388948204508","host":"s3://npm-registry-packages-npm-production"}},"0.3.4":{"name":"cursor-talk-to-figma-socket","description":"Cursor Talk to Figma Socket","version":"0.3.4","module":"dist/socket.js","main":"dist/socket.js","bin":{"cursor-talk-to-figma-socket":"dist/socket.js"},"type":"module","scripts":{"start":"bun run dist/socket.js","socket":"bun run dist/socket.js","setup":"./scripts/setup.sh","build":"tsup","build:watch":"tsup --watch","dev":"bun run build:watch","pub:release":"bun run build && npm publish"},"devDependencies":{"@types/bun":"latest","bun-types":"^1.2.5","tsup":"^8.4.0","typescript":"^5.0.0"},"dependencies":{"@modelcontextprotocol/sdk":"1.13.1","uuid":"latest","ws":"latest","zod":"3.22.4"},"types":"./dist/socket.d.ts","gitHead":"15a9c8332139b14cef2eb707df99c34adfe7bb13","_id":"cursor-talk-to-figma-socket@0.3.4","_nodeVersion":"16.19.0","_npmVersion":"8.19.3","dist":{"integrity":"sha512-bRCtM1UGn+wEnMhHdd+E3OC5Vr4hptMZtl6xVXHWFsZ1QSt8Dh+pudBgp4vE0eeyW3F4ip7BLL4t82yQtEifhA==","shasum":"ec86e92d6077c62b1ea89fd04d7c7e6871a2b317","tarball":"https://registry.npmjs.org/cursor-talk-to-figma-socket/-/cursor-talk-to-figma-socket-0.3.4.tgz","fileCount":9,"unpackedSize":41677,"signatures":[{"keyid":"SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U","sig":"MEYCIQDGMZHbZ6/HrciL213Wh3/plXv9i5X6MWBAPy0pMLeXwAIhANO8XvagxRbsFe49MKtYMM0dBG6Tg+XB8HueG9D0PbK8"}]},"_npmUser":{"name":"webrangeriit","email":"webrangeriit@gmail.com"},"directories":{},"maintainers":[{"name":"webrangeriit","email":"webrangeriit@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages-npm-production","tmp":"tmp/cursor-talk-to-figma-socket_0.3.4_1761618544298_0.2594342739874749"},"_hasShrinkwrap":false}},"time":{"created":"2025-03-26T12:53:33.884Z","modified":"2025-10-28T02:29:04.732Z","0.0.1":"2025-03-26T12:53:34.050Z","0.0.2":"2025-03-26T12:55:32.977Z","0.0.3":"2025-03-26T13:06:53.924Z","0.0.4":"2025-03-26T13:08:40.212Z","0.3.4":"2025-10-28T02:29:04.502Z"},"description":"Cursor Talk to Figma Socket","maintainers":[{"name":"webrangeriit","email":"webrangeriit@gmail.com"}],"readme":"# Cursor Talk to Figma MCP\n\nThis project implements a Model Context Protocol (MCP) integration between Cursor AI and Figma, allowing Cursor to communicate with Figma for reading designs and modifying them programmatically.\n\nhttps://github.com/user-attachments/assets/129a14d2-ed73-470f-9a4c-2240b2a4885c\n\n## Project Structure\n\n- `src/talk_to_figma_mcp/` - TypeScript MCP server for Figma integration\n- `src/cursor_mcp_plugin/` - Figma plugin for communicating with Cursor\n- `src/socket.ts` - WebSocket server that facilitates communication between the MCP server and Figma plugin\n\n## Get Started\n\n1. Install Bun if you haven't already:\n\n```bash\ncurl -fsSL https://bun.sh/install | bash\n```\n\n2. Run setup, this will also install MCP in your Cursor's active project\n\n```bash\nbun setup\n```\n\n3. Start the Websocket server\n\n```bash\nbun socket\n```\n\n4. **NEW** Install Figma plugin from [Figma community page](https://www.figma.com/community/plugin/1485687494525374295/cursor-talk-to-figma-mcp-plugin) or [install locally](#figma-plugin)\n\n## Quick Video Tutorial\n\n[Video Link](https://www.linkedin.com/posts/sonnylazuardi_just-wanted-to-share-my-latest-experiment-activity-7307821553654657024-yrh8)\n\n## Design Automation Example\n\n**Bulk text content replacement**\n\nThanks to [@dusskapark](https://github.com/dusskapark) for contributing the bulk text replacement feature. Here is the [demo video](https://www.youtube.com/watch?v=j05gGT3xfCs).\n\n**Instance Override Propagation**\nAnother contribution from [@dusskapark](https://github.com/dusskapark)\nPropagate component instance overrides from a source instance to multiple target instances with a single command. This feature dramatically reduces repetitive design work when working with component instances that need similar customizations. Check out our [demo video](https://youtu.be/uvuT8LByroI).\n\n## Development Setup\n\nTo develop, update your mcp config to direct to your local directory.\n\n```json\n{\n  \"mcpServers\": {\n    \"TalkToFigma\": {\n      \"command\": \"bun\",\n      \"args\": [\"/path-to-repo/src/talk_to_figma_mcp/server.ts\"]\n    }\n  }\n}\n```\n\n## Manual Setup and Installation\n\n### MCP Server: Integration with Cursor\n\nAdd the server to your Cursor MCP configuration in `~/.cursor/mcp.json`:\n\n```json\n{\n  \"mcpServers\": {\n    \"TalkToFigma\": {\n      \"command\": \"bunx\",\n      \"args\": [\"cursor-talk-to-figma-mcp@latest\"]\n    }\n  }\n}\n```\n\n### WebSocket Server\n\nStart the WebSocket server:\n\n```bash\nbun socket\n```\n\n### Figma Plugin\n\n1. In Figma, go to Plugins > Development > New Plugin\n2. Choose \"Link existing plugin\"\n3. Select the `src/cursor_mcp_plugin/manifest.json` file\n4. The plugin should now be available in your Figma development plugins\n\n## Windows + WSL Guide\n\n1. Install bun via powershell\n\n```bash\npowershell -c \"irm bun.sh/install.ps1|iex\"\n```\n\n2. Uncomment the hostname `0.0.0.0` in `src/socket.ts`\n\n```typescript\n// uncomment this to allow connections in windows wsl\nhostname: \"0.0.0.0\",\n```\n\n3. Start the websocket\n\n```bash\nbun socket\n```\n\n## Usage\n\n1. Start the WebSocket server\n2. Install the MCP server in Cursor\n3. Open Figma and run the Cursor MCP Plugin\n4. Connect the plugin to the WebSocket server by joining a channel using `join_channel`\n5. Use Cursor to communicate with Figma using the MCP tools\n\n## MCP Tools\n\nThe MCP server provides the following tools for interacting with Figma:\n\n### Document & Selection\n\n- `get_document_info` - Get information about the current Figma document\n- `get_selection` - Get information about the current selection\n- `read_my_design` - Get detailed node information about the current selection without parameters\n- `get_node_info` - Get detailed information about a specific node\n- `get_nodes_info` - Get detailed information about multiple nodes by providing an array of node IDs\n- `set_focus` - Set focus on a specific node by selecting it and scrolling viewport to it\n- `set_selections` - Set selection to multiple nodes and scroll viewport to show them\n\n### Annotations\n\n- `get_annotations` - Get all annotations in the current document or specific node\n- `set_annotation` - Create or update an annotation with markdown support\n- `set_multiple_annotations` - Batch create/update multiple annotations efficiently\n- `scan_nodes_by_types` - Scan for nodes with specific types (useful for finding annotation targets)\n\n### Prototyping & Connections\n\n- `get_reactions` - Get all prototype reactions from nodes with visual highlight animation\n- `set_default_connector` - Set a copied FigJam connector as the default connector style for creating connections (must be set before creating connections)\n- `create_connections` - Create FigJam connector lines between nodes, based on prototype flows or custom mapping\n\n### Creating Elements\n\n- `create_rectangle` - Create a new rectangle with position, size, and optional name\n- `create_frame` - Create a new frame with position, size, and optional name\n- `create_text` - Create a new text node with customizable font properties\n\n### Modifying text content\n\n- `scan_text_nodes` - Scan text nodes with intelligent chunking for large designs\n- `set_text_content` - Set the text content of a single text node\n- `set_multiple_text_contents` - Batch update multiple text nodes efficiently\n\n### Auto Layout & Spacing\n\n- `set_layout_mode` - Set the layout mode and wrap behavior of a frame (NONE, HORIZONTAL, VERTICAL)\n- `set_padding` - Set padding values for an auto-layout frame (top, right, bottom, left)\n- `set_axis_align` - Set primary and counter axis alignment for auto-layout frames\n- `set_layout_sizing` - Set horizontal and vertical sizing modes for auto-layout frames (FIXED, HUG, FILL)\n- `set_item_spacing` - Set distance between children in an auto-layout frame\n\n### Styling\n\n- `set_fill_color` - Set the fill color of a node (RGBA)\n- `set_stroke_color` - Set the stroke color and weight of a node\n- `set_corner_radius` - Set the corner radius of a node with optional per-corner control\n\n### Layout & Organization\n\n- `move_node` - Move a node to a new position\n- `resize_node` - Resize a node with new dimensions\n- `delete_node` - Delete a node\n- `delete_multiple_nodes` - Delete multiple nodes at once efficiently\n- `clone_node` - Create a copy of an existing node with optional position offset\n\n### Components & Styles\n\n- `get_styles` - Get information about local styles\n- `get_local_components` - Get information about local components\n- `create_component_instance` - Create an instance of a component\n- `get_instance_overrides` - Extract override properties from a selected component instance\n- `set_instance_overrides` - Apply extracted overrides to target instances\n\n### Export & Advanced\n\n- `export_node_as_image` - Export a node as an image (PNG, JPG, SVG, or PDF) - limited support on image currently returning base64 as text\n\n### Connection Management\n\n- `join_channel` - Join a specific channel to communicate with Figma\n\n### MCP Prompts\n\nThe MCP server includes several helper prompts to guide you through complex design tasks:\n\n- `design_strategy` - Best practices for working with Figma designs\n- `read_design_strategy` - Best practices for reading Figma designs\n- `text_replacement_strategy` - Systematic approach for replacing text in Figma designs\n- `annotation_conversion_strategy` - Strategy for converting manual annotations to Figma's native annotations\n- `swap_overrides_instances` - Strategy for transferring overrides between component instances in Figma\n- `reaction_to_connector_strategy` - Strategy for converting Figma prototype reactions to connector lines using the output of 'get_reactions', and guiding the use 'create_connections' in sequence\n\n## Development\n\n### Building the Figma Plugin\n\n1. Navigate to the Figma plugin directory:\n\n   ```\n   cd src/cursor_mcp_plugin\n   ```\n\n2. Edit code.js and ui.html\n\n## Best Practices\n\nWhen working with the Figma MCP:\n\n1. Always join a channel before sending commands\n2. Get document overview using `get_document_info` first\n3. Check current selection with `get_selection` before modifications\n4. Use appropriate creation tools based on needs:\n   - `create_frame` for containers\n   - `create_rectangle` for basic shapes\n   - `create_text` for text elements\n5. Verify changes using `get_node_info`\n6. Use component instances when possible for consistency\n7. Handle errors appropriately as all commands can throw exceptions\n8. For large designs:\n   - Use chunking parameters in `scan_text_nodes`\n   - Monitor progress through WebSocket updates\n   - Implement appropriate error handling\n9. For text operations:\n   - Use batch operations when possible\n   - Consider structural relationships\n   - Verify changes with targeted exports\n10. For converting legacy annotations:\n    - Scan text nodes to identify numbered markers and descriptions\n    - Use `scan_nodes_by_types` to find UI elements that annotations refer to\n    - Match markers with their target elements using path, name, or proximity\n    - Categorize annotations appropriately with `get_annotations`\n    - Create native annotations with `set_multiple_annotations` in batches\n    - Verify all annotations are properly linked to their targets\n    - Delete legacy annotation nodes after successful conversion\n11. Visualize prototype noodles as FigJam connectors:\n\n- Use `get_reactions` to extract prototype flows,\n- set a default connector with `set_default_connector`,\n- and generate connector lines with `create_connections` for clear visual flow mapping.\n\n## License\n\nMIT\n","readmeFilename":"readme.md"}