아래의 조건을 모두 적용하여, 아래의 요구사항을 모두 구현할 것.
구현 결과를 체크리스트로 반환할 것.

==============================================

조건-커서룰) 아래의 커서룰을 적용하여 작업하고, 이 작업이 끝나면 해당 rules 적용 결과를 체크리스트로 반환할 것.
            - @01-common.mdc
            - @02-wireframe.mdc
            - @03-ui.mdc

==============================================

조건-피그마) 활용할MCP: CursorTalkToFigmaMCP(채널명: ipsmlh0a)
조건-피그마) 구현될 컴포넌트 노드ID(회원가입 페이지 전체 모습): 285:32642
조건-피그마) 구현될 컴포넌트 노드ID(회원가입 페이지 박스만): 285:32644


조건-파일경로) 구현될 TSX 파일경로: src/components/auth-signup/index.tsx
조건-파일경로) 구현될 CSS 파일경로: src/components/auth-signup/styles.module.css

==============================================

조건-공통목록) 사용할 색상 목록(global.css에 명시된 변수 토큰 활용)
            - 비슷한 토큰 선택하여 사용(하드코딩 금지)

조건-공통목록) 사용할 타이포그래피 목록(global.css에 명시된 변수 토큰 활용)
            - 비슷한 토큰 선택하여 사용(하드코딩 금지)

==============================================

핵심요구사항) MCP를 연동하여 피그마의 디자인을 이미 만들어져있는 와이어프레임 영역에 그대로 구현할 것.

핵심요구사항) 완성된 컴포넌트를 페이지에서 import하여 연결시킬 것.
            - 연결될 경로: src/app/auth/signup/page.tsx

여기서 이제 조건-피그마) 구현될 컴포넌트 노드ID(회원가입 페이지 박스만): 285:32644 이 피그마 참고해서 구현해. 회원가입 페이지에는 로고가 없어. 그리고 중복확인 버튼도 없고, 로그인 버튼도 없어. 트립트립에 오신 걸 환영합니다가 아니라 회원가입이라는 글자야. 


